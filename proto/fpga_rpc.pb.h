// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proto/fpga_rpc.proto

#ifndef PROTOBUF_proto_2ffpga_5frpc_2eproto__INCLUDED
#define PROTOBUF_proto_2ffpga_5frpc_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/map.h>
#include <google/protobuf/map_field_inl.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_proto_2ffpga_5frpc_2eproto();
void protobuf_AssignDesc_proto_2ffpga_5frpc_2eproto();
void protobuf_ShutdownFile_proto_2ffpga_5frpc_2eproto();

class AccJob;
class AllocMessage;
class AllocReturn;
class FreeMessage;
class FreeReturn;
class RunMessage;
class RunReturn;

// ===================================================================

class RunMessage : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:RunMessage) */ {
 public:
  RunMessage();
  virtual ~RunMessage();

  RunMessage(const RunMessage& from);

  inline RunMessage& operator=(const RunMessage& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RunMessage& default_instance();

  void Swap(RunMessage* other);

  // implements Message ----------------------------------------------

  inline RunMessage* New() const { return New(NULL); }

  RunMessage* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RunMessage& from);
  void MergeFrom(const RunMessage& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(RunMessage* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .AccJob Jobs = 1;
  int jobs_size() const;
  void clear_jobs();
  static const int kJobsFieldNumber = 1;
  const ::AccJob& jobs(int index) const;
  ::AccJob* mutable_jobs(int index);
  ::AccJob* add_jobs();
  ::google::protobuf::RepeatedPtrField< ::AccJob >*
      mutable_jobs();
  const ::google::protobuf::RepeatedPtrField< ::AccJob >&
      jobs() const;

  // @@protoc_insertion_point(class_scope:RunMessage)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::RepeatedPtrField< ::AccJob > jobs_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_proto_2ffpga_5frpc_2eproto();
  friend void protobuf_AssignDesc_proto_2ffpga_5frpc_2eproto();
  friend void protobuf_ShutdownFile_proto_2ffpga_5frpc_2eproto();

  void InitAsDefaultInstance();
  static RunMessage* default_instance_;
};
// -------------------------------------------------------------------

class AccJob : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:AccJob) */ {
 public:
  AccJob();
  virtual ~AccJob();

  AccJob(const AccJob& from);

  inline AccJob& operator=(const AccJob& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AccJob& default_instance();

  void Swap(AccJob* other);

  // implements Message ----------------------------------------------

  inline AccJob* New() const { return New(NULL); }

  AccJob* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AccJob& from);
  void MergeFrom(const AccJob& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(AccJob* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // optional string AccName = 1;
  void clear_accname();
  static const int kAccNameFieldNumber = 1;
  const ::std::string& accname() const;
  void set_accname(const ::std::string& value);
  void set_accname(const char* value);
  void set_accname(const char* value, size_t size);
  ::std::string* mutable_accname();
  ::std::string* release_accname();
  void set_allocated_accname(::std::string* accname);

  // optional string PerName = 2;
  void clear_pername();
  static const int kPerNameFieldNumber = 2;
  const ::std::string& pername() const;
  void set_pername(const ::std::string& value);
  void set_pername(const char* value);
  void set_pername(const char* value, size_t size);
  ::std::string* mutable_pername();
  ::std::string* release_pername();
  void set_allocated_pername(::std::string* pername);

  // map<string, uint32> Parameters = 3;
  int parameters_size() const;
  void clear_parameters();
  static const int kParametersFieldNumber = 3;
  const ::google::protobuf::Map< ::std::string, ::google::protobuf::uint32 >&
      parameters() const;
  ::google::protobuf::Map< ::std::string, ::google::protobuf::uint32 >*
      mutable_parameters();

  // @@protoc_insertion_point(class_scope:AccJob)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr accname_;
  ::google::protobuf::internal::ArenaStringPtr pername_;
  typedef ::google::protobuf::internal::MapEntryLite<
      ::std::string, ::google::protobuf::uint32,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      0 >
      AccJob_ParametersEntry;
  ::google::protobuf::internal::MapField<
      ::std::string, ::google::protobuf::uint32,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      0 > parameters_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_proto_2ffpga_5frpc_2eproto();
  friend void protobuf_AssignDesc_proto_2ffpga_5frpc_2eproto();
  friend void protobuf_ShutdownFile_proto_2ffpga_5frpc_2eproto();

  void InitAsDefaultInstance();
  static AccJob* default_instance_;
};
// -------------------------------------------------------------------

class RunReturn : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:RunReturn) */ {
 public:
  RunReturn();
  virtual ~RunReturn();

  RunReturn(const RunReturn& from);

  inline RunReturn& operator=(const RunReturn& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RunReturn& default_instance();

  void Swap(RunReturn* other);

  // implements Message ----------------------------------------------

  inline RunReturn* New() const { return New(NULL); }

  RunReturn* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RunReturn& from);
  void MergeFrom(const RunReturn& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(RunReturn* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool success = 1;
  void clear_success();
  static const int kSuccessFieldNumber = 1;
  bool success() const;
  void set_success(bool value);

  // @@protoc_insertion_point(class_scope:RunReturn)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  bool success_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_proto_2ffpga_5frpc_2eproto();
  friend void protobuf_AssignDesc_proto_2ffpga_5frpc_2eproto();
  friend void protobuf_ShutdownFile_proto_2ffpga_5frpc_2eproto();

  void InitAsDefaultInstance();
  static RunReturn* default_instance_;
};
// -------------------------------------------------------------------

class AllocMessage : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:AllocMessage) */ {
 public:
  AllocMessage();
  virtual ~AllocMessage();

  AllocMessage(const AllocMessage& from);

  inline AllocMessage& operator=(const AllocMessage& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AllocMessage& default_instance();

  void Swap(AllocMessage* other);

  // implements Message ----------------------------------------------

  inline AllocMessage* New() const { return New(NULL); }

  AllocMessage* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AllocMessage& from);
  void MergeFrom(const AllocMessage& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(AllocMessage* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:AllocMessage)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_proto_2ffpga_5frpc_2eproto();
  friend void protobuf_AssignDesc_proto_2ffpga_5frpc_2eproto();
  friend void protobuf_ShutdownFile_proto_2ffpga_5frpc_2eproto();

  void InitAsDefaultInstance();
  static AllocMessage* default_instance_;
};
// -------------------------------------------------------------------

class AllocReturn : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:AllocReturn) */ {
 public:
  AllocReturn();
  virtual ~AllocReturn();

  AllocReturn(const AllocReturn& from);

  inline AllocReturn& operator=(const AllocReturn& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AllocReturn& default_instance();

  void Swap(AllocReturn* other);

  // implements Message ----------------------------------------------

  inline AllocReturn* New() const { return New(NULL); }

  AllocReturn* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AllocReturn& from);
  void MergeFrom(const AllocReturn& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(AllocReturn* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 bufno = 1;
  void clear_bufno();
  static const int kBufnoFieldNumber = 1;
  ::google::protobuf::int32 bufno() const;
  void set_bufno(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:AllocReturn)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::int32 bufno_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_proto_2ffpga_5frpc_2eproto();
  friend void protobuf_AssignDesc_proto_2ffpga_5frpc_2eproto();
  friend void protobuf_ShutdownFile_proto_2ffpga_5frpc_2eproto();

  void InitAsDefaultInstance();
  static AllocReturn* default_instance_;
};
// -------------------------------------------------------------------

class FreeMessage : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:FreeMessage) */ {
 public:
  FreeMessage();
  virtual ~FreeMessage();

  FreeMessage(const FreeMessage& from);

  inline FreeMessage& operator=(const FreeMessage& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FreeMessage& default_instance();

  void Swap(FreeMessage* other);

  // implements Message ----------------------------------------------

  inline FreeMessage* New() const { return New(NULL); }

  FreeMessage* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FreeMessage& from);
  void MergeFrom(const FreeMessage& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(FreeMessage* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 bufno = 1;
  void clear_bufno();
  static const int kBufnoFieldNumber = 1;
  ::google::protobuf::int32 bufno() const;
  void set_bufno(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:FreeMessage)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::int32 bufno_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_proto_2ffpga_5frpc_2eproto();
  friend void protobuf_AssignDesc_proto_2ffpga_5frpc_2eproto();
  friend void protobuf_ShutdownFile_proto_2ffpga_5frpc_2eproto();

  void InitAsDefaultInstance();
  static FreeMessage* default_instance_;
};
// -------------------------------------------------------------------

class FreeReturn : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:FreeReturn) */ {
 public:
  FreeReturn();
  virtual ~FreeReturn();

  FreeReturn(const FreeReturn& from);

  inline FreeReturn& operator=(const FreeReturn& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FreeReturn& default_instance();

  void Swap(FreeReturn* other);

  // implements Message ----------------------------------------------

  inline FreeReturn* New() const { return New(NULL); }

  FreeReturn* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FreeReturn& from);
  void MergeFrom(const FreeReturn& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(FreeReturn* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:FreeReturn)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_proto_2ffpga_5frpc_2eproto();
  friend void protobuf_AssignDesc_proto_2ffpga_5frpc_2eproto();
  friend void protobuf_ShutdownFile_proto_2ffpga_5frpc_2eproto();

  void InitAsDefaultInstance();
  static FreeReturn* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// RunMessage

// repeated .AccJob Jobs = 1;
inline int RunMessage::jobs_size() const {
  return jobs_.size();
}
inline void RunMessage::clear_jobs() {
  jobs_.Clear();
}
inline const ::AccJob& RunMessage::jobs(int index) const {
  // @@protoc_insertion_point(field_get:RunMessage.Jobs)
  return jobs_.Get(index);
}
inline ::AccJob* RunMessage::mutable_jobs(int index) {
  // @@protoc_insertion_point(field_mutable:RunMessage.Jobs)
  return jobs_.Mutable(index);
}
inline ::AccJob* RunMessage::add_jobs() {
  // @@protoc_insertion_point(field_add:RunMessage.Jobs)
  return jobs_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::AccJob >*
RunMessage::mutable_jobs() {
  // @@protoc_insertion_point(field_mutable_list:RunMessage.Jobs)
  return &jobs_;
}
inline const ::google::protobuf::RepeatedPtrField< ::AccJob >&
RunMessage::jobs() const {
  // @@protoc_insertion_point(field_list:RunMessage.Jobs)
  return jobs_;
}

// -------------------------------------------------------------------

// AccJob

// optional string AccName = 1;
inline void AccJob::clear_accname() {
  accname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AccJob::accname() const {
  // @@protoc_insertion_point(field_get:AccJob.AccName)
  return accname_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AccJob::set_accname(const ::std::string& value) {
  
  accname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:AccJob.AccName)
}
inline void AccJob::set_accname(const char* value) {
  
  accname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:AccJob.AccName)
}
inline void AccJob::set_accname(const char* value, size_t size) {
  
  accname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:AccJob.AccName)
}
inline ::std::string* AccJob::mutable_accname() {
  
  // @@protoc_insertion_point(field_mutable:AccJob.AccName)
  return accname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AccJob::release_accname() {
  // @@protoc_insertion_point(field_release:AccJob.AccName)
  
  return accname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AccJob::set_allocated_accname(::std::string* accname) {
  if (accname != NULL) {
    
  } else {
    
  }
  accname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), accname);
  // @@protoc_insertion_point(field_set_allocated:AccJob.AccName)
}

// optional string PerName = 2;
inline void AccJob::clear_pername() {
  pername_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AccJob::pername() const {
  // @@protoc_insertion_point(field_get:AccJob.PerName)
  return pername_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AccJob::set_pername(const ::std::string& value) {
  
  pername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:AccJob.PerName)
}
inline void AccJob::set_pername(const char* value) {
  
  pername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:AccJob.PerName)
}
inline void AccJob::set_pername(const char* value, size_t size) {
  
  pername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:AccJob.PerName)
}
inline ::std::string* AccJob::mutable_pername() {
  
  // @@protoc_insertion_point(field_mutable:AccJob.PerName)
  return pername_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AccJob::release_pername() {
  // @@protoc_insertion_point(field_release:AccJob.PerName)
  
  return pername_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AccJob::set_allocated_pername(::std::string* pername) {
  if (pername != NULL) {
    
  } else {
    
  }
  pername_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), pername);
  // @@protoc_insertion_point(field_set_allocated:AccJob.PerName)
}

// map<string, uint32> Parameters = 3;
inline int AccJob::parameters_size() const {
  return parameters_.size();
}
inline void AccJob::clear_parameters() {
  parameters_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::google::protobuf::uint32 >&
AccJob::parameters() const {
  // @@protoc_insertion_point(field_map:AccJob.Parameters)
  return parameters_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::google::protobuf::uint32 >*
AccJob::mutable_parameters() {
  // @@protoc_insertion_point(field_mutable_map:AccJob.Parameters)
  return parameters_.MutableMap();
}

// -------------------------------------------------------------------

// RunReturn

// optional bool success = 1;
inline void RunReturn::clear_success() {
  success_ = false;
}
inline bool RunReturn::success() const {
  // @@protoc_insertion_point(field_get:RunReturn.success)
  return success_;
}
inline void RunReturn::set_success(bool value) {
  
  success_ = value;
  // @@protoc_insertion_point(field_set:RunReturn.success)
}

// -------------------------------------------------------------------

// AllocMessage

// -------------------------------------------------------------------

// AllocReturn

// optional int32 bufno = 1;
inline void AllocReturn::clear_bufno() {
  bufno_ = 0;
}
inline ::google::protobuf::int32 AllocReturn::bufno() const {
  // @@protoc_insertion_point(field_get:AllocReturn.bufno)
  return bufno_;
}
inline void AllocReturn::set_bufno(::google::protobuf::int32 value) {
  
  bufno_ = value;
  // @@protoc_insertion_point(field_set:AllocReturn.bufno)
}

// -------------------------------------------------------------------

// FreeMessage

// optional int32 bufno = 1;
inline void FreeMessage::clear_bufno() {
  bufno_ = 0;
}
inline ::google::protobuf::int32 FreeMessage::bufno() const {
  // @@protoc_insertion_point(field_get:FreeMessage.bufno)
  return bufno_;
}
inline void FreeMessage::set_bufno(::google::protobuf::int32 value) {
  
  bufno_ = value;
  // @@protoc_insertion_point(field_set:FreeMessage.bufno)
}

// -------------------------------------------------------------------

// FreeReturn

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_proto_2ffpga_5frpc_2eproto__INCLUDED
