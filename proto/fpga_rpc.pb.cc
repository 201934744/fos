// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proto/fpga_rpc.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "proto/fpga_rpc.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* RunMessage_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RunMessage_reflection_ = NULL;
const ::google::protobuf::Descriptor* AccJob_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AccJob_reflection_ = NULL;
const ::google::protobuf::Descriptor* AccJob_ParametersEntry_descriptor_ = NULL;
const ::google::protobuf::Descriptor* RunReturn_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RunReturn_reflection_ = NULL;
const ::google::protobuf::Descriptor* AllocMessage_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AllocMessage_reflection_ = NULL;
const ::google::protobuf::Descriptor* AllocReturn_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AllocReturn_reflection_ = NULL;
const ::google::protobuf::Descriptor* FreeMessage_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  FreeMessage_reflection_ = NULL;
const ::google::protobuf::Descriptor* FreeReturn_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  FreeReturn_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_proto_2ffpga_5frpc_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_proto_2ffpga_5frpc_2eproto() {
  protobuf_AddDesc_proto_2ffpga_5frpc_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "proto/fpga_rpc.proto");
  GOOGLE_CHECK(file != NULL);
  RunMessage_descriptor_ = file->message_type(0);
  static const int RunMessage_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RunMessage, jobs_),
  };
  RunMessage_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      RunMessage_descriptor_,
      RunMessage::default_instance_,
      RunMessage_offsets_,
      -1,
      -1,
      -1,
      sizeof(RunMessage),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RunMessage, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RunMessage, _is_default_instance_));
  AccJob_descriptor_ = file->message_type(1);
  static const int AccJob_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AccJob, accname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AccJob, pername_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AccJob, parameters_),
  };
  AccJob_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      AccJob_descriptor_,
      AccJob::default_instance_,
      AccJob_offsets_,
      -1,
      -1,
      -1,
      sizeof(AccJob),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AccJob, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AccJob, _is_default_instance_));
  AccJob_ParametersEntry_descriptor_ = AccJob_descriptor_->nested_type(0);
  RunReturn_descriptor_ = file->message_type(2);
  static const int RunReturn_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RunReturn, success_),
  };
  RunReturn_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      RunReturn_descriptor_,
      RunReturn::default_instance_,
      RunReturn_offsets_,
      -1,
      -1,
      -1,
      sizeof(RunReturn),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RunReturn, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RunReturn, _is_default_instance_));
  AllocMessage_descriptor_ = file->message_type(3);
  static const int AllocMessage_offsets_[1] = {
  };
  AllocMessage_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      AllocMessage_descriptor_,
      AllocMessage::default_instance_,
      AllocMessage_offsets_,
      -1,
      -1,
      -1,
      sizeof(AllocMessage),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AllocMessage, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AllocMessage, _is_default_instance_));
  AllocReturn_descriptor_ = file->message_type(4);
  static const int AllocReturn_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AllocReturn, bufno_),
  };
  AllocReturn_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      AllocReturn_descriptor_,
      AllocReturn::default_instance_,
      AllocReturn_offsets_,
      -1,
      -1,
      -1,
      sizeof(AllocReturn),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AllocReturn, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AllocReturn, _is_default_instance_));
  FreeMessage_descriptor_ = file->message_type(5);
  static const int FreeMessage_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FreeMessage, bufno_),
  };
  FreeMessage_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      FreeMessage_descriptor_,
      FreeMessage::default_instance_,
      FreeMessage_offsets_,
      -1,
      -1,
      -1,
      sizeof(FreeMessage),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FreeMessage, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FreeMessage, _is_default_instance_));
  FreeReturn_descriptor_ = file->message_type(6);
  static const int FreeReturn_offsets_[1] = {
  };
  FreeReturn_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      FreeReturn_descriptor_,
      FreeReturn::default_instance_,
      FreeReturn_offsets_,
      -1,
      -1,
      -1,
      sizeof(FreeReturn),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FreeReturn, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FreeReturn, _is_default_instance_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_proto_2ffpga_5frpc_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      RunMessage_descriptor_, &RunMessage::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      AccJob_descriptor_, &AccJob::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
        AccJob_ParametersEntry_descriptor_,
        ::google::protobuf::internal::MapEntry<
            ::std::string,
            ::google::protobuf::uint32,
            ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
            ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
            0>::CreateDefaultInstance(
                AccJob_ParametersEntry_descriptor_));
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      RunReturn_descriptor_, &RunReturn::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      AllocMessage_descriptor_, &AllocMessage::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      AllocReturn_descriptor_, &AllocReturn::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      FreeMessage_descriptor_, &FreeMessage::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      FreeReturn_descriptor_, &FreeReturn::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_proto_2ffpga_5frpc_2eproto() {
  delete RunMessage::default_instance_;
  delete RunMessage_reflection_;
  delete AccJob::default_instance_;
  delete AccJob_reflection_;
  delete RunReturn::default_instance_;
  delete RunReturn_reflection_;
  delete AllocMessage::default_instance_;
  delete AllocMessage_reflection_;
  delete AllocReturn::default_instance_;
  delete AllocReturn_reflection_;
  delete FreeMessage::default_instance_;
  delete FreeMessage_reflection_;
  delete FreeReturn::default_instance_;
  delete FreeReturn_reflection_;
}

void protobuf_AddDesc_proto_2ffpga_5frpc_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_proto_2ffpga_5frpc_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\024proto/fpga_rpc.proto\"#\n\nRunMessage\022\025\n\004"
    "Jobs\030\001 \003(\0132\007.AccJob\"\212\001\n\006AccJob\022\017\n\007AccNam"
    "e\030\001 \001(\t\022\017\n\007PerName\030\002 \001(\t\022+\n\nParameters\030\003"
    " \003(\0132\027.AccJob.ParametersEntry\0321\n\017Paramet"
    "ersEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\r:\0028\001"
    "\"\034\n\tRunReturn\022\017\n\007success\030\001 \001(\010\"\016\n\014AllocM"
    "essage\"\034\n\013AllocReturn\022\r\n\005bufno\030\001 \001(\005\"\034\n\013"
    "FreeMessage\022\r\n\005bufno\030\001 \001(\005\"\014\n\nFreeReturn"
    "2x\n\007FPGARPC\022 \n\003Run\022\013.RunMessage\032\n.RunRet"
    "urn\"\000\022&\n\005Alloc\022\r.AllocMessage\032\014.AllocRet"
    "urn\"\000\022#\n\004Free\022\014.FreeMessage\032\013.FreeReturn"
    "\"\000b\006proto3", 450);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "proto/fpga_rpc.proto", &protobuf_RegisterTypes);
  RunMessage::default_instance_ = new RunMessage();
  AccJob::default_instance_ = new AccJob();
  RunReturn::default_instance_ = new RunReturn();
  AllocMessage::default_instance_ = new AllocMessage();
  AllocReturn::default_instance_ = new AllocReturn();
  FreeMessage::default_instance_ = new FreeMessage();
  FreeReturn::default_instance_ = new FreeReturn();
  RunMessage::default_instance_->InitAsDefaultInstance();
  AccJob::default_instance_->InitAsDefaultInstance();
  RunReturn::default_instance_->InitAsDefaultInstance();
  AllocMessage::default_instance_->InitAsDefaultInstance();
  AllocReturn::default_instance_->InitAsDefaultInstance();
  FreeMessage::default_instance_->InitAsDefaultInstance();
  FreeReturn::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_proto_2ffpga_5frpc_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_proto_2ffpga_5frpc_2eproto {
  StaticDescriptorInitializer_proto_2ffpga_5frpc_2eproto() {
    protobuf_AddDesc_proto_2ffpga_5frpc_2eproto();
  }
} static_descriptor_initializer_proto_2ffpga_5frpc_2eproto_;

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RunMessage::kJobsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RunMessage::RunMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:RunMessage)
}

void RunMessage::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

RunMessage::RunMessage(const RunMessage& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:RunMessage)
}

void RunMessage::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

RunMessage::~RunMessage() {
  // @@protoc_insertion_point(destructor:RunMessage)
  SharedDtor();
}

void RunMessage::SharedDtor() {
  if (this != default_instance_) {
  }
}

void RunMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RunMessage::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RunMessage_descriptor_;
}

const RunMessage& RunMessage::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_proto_2ffpga_5frpc_2eproto();
  return *default_instance_;
}

RunMessage* RunMessage::default_instance_ = NULL;

RunMessage* RunMessage::New(::google::protobuf::Arena* arena) const {
  RunMessage* n = new RunMessage;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RunMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:RunMessage)
  jobs_.Clear();
}

bool RunMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:RunMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .AccJob Jobs = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_Jobs:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_jobs()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_Jobs;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:RunMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:RunMessage)
  return false;
#undef DO_
}

void RunMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:RunMessage)
  // repeated .AccJob Jobs = 1;
  for (unsigned int i = 0, n = this->jobs_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->jobs(i), output);
  }

  // @@protoc_insertion_point(serialize_end:RunMessage)
}

::google::protobuf::uint8* RunMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:RunMessage)
  // repeated .AccJob Jobs = 1;
  for (unsigned int i = 0, n = this->jobs_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->jobs(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:RunMessage)
  return target;
}

int RunMessage::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:RunMessage)
  int total_size = 0;

  // repeated .AccJob Jobs = 1;
  total_size += 1 * this->jobs_size();
  for (int i = 0; i < this->jobs_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->jobs(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RunMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:RunMessage)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const RunMessage* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const RunMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:RunMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:RunMessage)
    MergeFrom(*source);
  }
}

void RunMessage::MergeFrom(const RunMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:RunMessage)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  jobs_.MergeFrom(from.jobs_);
}

void RunMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:RunMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RunMessage::CopyFrom(const RunMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:RunMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RunMessage::IsInitialized() const {

  return true;
}

void RunMessage::Swap(RunMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RunMessage::InternalSwap(RunMessage* other) {
  jobs_.UnsafeArenaSwap(&other->jobs_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RunMessage::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RunMessage_descriptor_;
  metadata.reflection = RunMessage_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RunMessage

// repeated .AccJob Jobs = 1;
int RunMessage::jobs_size() const {
  return jobs_.size();
}
void RunMessage::clear_jobs() {
  jobs_.Clear();
}
const ::AccJob& RunMessage::jobs(int index) const {
  // @@protoc_insertion_point(field_get:RunMessage.Jobs)
  return jobs_.Get(index);
}
::AccJob* RunMessage::mutable_jobs(int index) {
  // @@protoc_insertion_point(field_mutable:RunMessage.Jobs)
  return jobs_.Mutable(index);
}
::AccJob* RunMessage::add_jobs() {
  // @@protoc_insertion_point(field_add:RunMessage.Jobs)
  return jobs_.Add();
}
::google::protobuf::RepeatedPtrField< ::AccJob >*
RunMessage::mutable_jobs() {
  // @@protoc_insertion_point(field_mutable_list:RunMessage.Jobs)
  return &jobs_;
}
const ::google::protobuf::RepeatedPtrField< ::AccJob >&
RunMessage::jobs() const {
  // @@protoc_insertion_point(field_list:RunMessage.Jobs)
  return jobs_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AccJob::kAccNameFieldNumber;
const int AccJob::kPerNameFieldNumber;
const int AccJob::kParametersFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AccJob::AccJob()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:AccJob)
}

void AccJob::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

AccJob::AccJob(const AccJob& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:AccJob)
}

void AccJob::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  accname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pername_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  parameters_.SetAssignDescriptorCallback(
      protobuf_AssignDescriptorsOnce);
  parameters_.SetEntryDescriptor(
      &::AccJob_ParametersEntry_descriptor_);
}

AccJob::~AccJob() {
  // @@protoc_insertion_point(destructor:AccJob)
  SharedDtor();
}

void AccJob::SharedDtor() {
  accname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pername_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void AccJob::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AccJob::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AccJob_descriptor_;
}

const AccJob& AccJob::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_proto_2ffpga_5frpc_2eproto();
  return *default_instance_;
}

AccJob* AccJob::default_instance_ = NULL;

AccJob* AccJob::New(::google::protobuf::Arena* arena) const {
  AccJob* n = new AccJob;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AccJob::Clear() {
// @@protoc_insertion_point(message_clear_start:AccJob)
  accname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pername_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  parameters_.Clear();
}

bool AccJob::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AccJob)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string AccName = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_accname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->accname().data(), this->accname().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "AccJob.AccName"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_PerName;
        break;
      }

      // optional string PerName = 2;
      case 2: {
        if (tag == 18) {
         parse_PerName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_pername()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->pername().data(), this->pername().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "AccJob.PerName"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_Parameters;
        break;
      }

      // map<string, uint32> Parameters = 3;
      case 3: {
        if (tag == 26) {
         parse_Parameters:
          DO_(input->IncrementRecursionDepth());
         parse_loop_Parameters:
          AccJob_ParametersEntry::Parser< ::google::protobuf::internal::MapField<
              ::std::string, ::google::protobuf::uint32,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
              0 >,
            ::google::protobuf::Map< ::std::string, ::google::protobuf::uint32 > > parser(&parameters_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), parser.key().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "AccJob.ParametersEntry.key"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_loop_Parameters;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AccJob)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AccJob)
  return false;
#undef DO_
}

void AccJob::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AccJob)
  // optional string AccName = 1;
  if (this->accname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->accname().data(), this->accname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "AccJob.AccName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->accname(), output);
  }

  // optional string PerName = 2;
  if (this->pername().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->pername().data(), this->pername().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "AccJob.PerName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->pername(), output);
  }

  // map<string, uint32> Parameters = 3;
  if (!this->parameters().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::google::protobuf::uint32 >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), p->first.length(),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "AccJob.ParametersEntry.key");
      }
    };

    if (output->IsSerializationDeterminstic() &&
        this->parameters().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->parameters().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::google::protobuf::uint32 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::google::protobuf::uint32 >::const_iterator
          it = this->parameters().begin();
          it != this->parameters().end(); ++it, ++n) {
        items[n] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[n], Less());
      ::google::protobuf::scoped_ptr<AccJob_ParametersEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(parameters_.NewEntryWrapper(
            items[i]->first, items[i]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            3, *entry, output);
        Utf8Check::Check(items[i]);
      }
    } else {
      ::google::protobuf::scoped_ptr<AccJob_ParametersEntry> entry;
      for (::google::protobuf::Map< ::std::string, ::google::protobuf::uint32 >::const_iterator
          it = this->parameters().begin();
          it != this->parameters().end(); ++it) {
        entry.reset(parameters_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            3, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  // @@protoc_insertion_point(serialize_end:AccJob)
}

::google::protobuf::uint8* AccJob::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:AccJob)
  // optional string AccName = 1;
  if (this->accname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->accname().data(), this->accname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "AccJob.AccName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->accname(), target);
  }

  // optional string PerName = 2;
  if (this->pername().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->pername().data(), this->pername().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "AccJob.PerName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->pername(), target);
  }

  // map<string, uint32> Parameters = 3;
  if (!this->parameters().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::google::protobuf::uint32 >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), p->first.length(),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "AccJob.ParametersEntry.key");
      }
    };

    if (deterministic &&
        this->parameters().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->parameters().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::google::protobuf::uint32 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::google::protobuf::uint32 >::const_iterator
          it = this->parameters().begin();
          it != this->parameters().end(); ++it, ++n) {
        items[n] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[n], Less());
      ::google::protobuf::scoped_ptr<AccJob_ParametersEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(parameters_.NewEntryWrapper(
            items[i]->first, items[i]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       3, *entry, deterministic, target);
;
        Utf8Check::Check(items[i]);
      }
    } else {
      ::google::protobuf::scoped_ptr<AccJob_ParametersEntry> entry;
      for (::google::protobuf::Map< ::std::string, ::google::protobuf::uint32 >::const_iterator
          it = this->parameters().begin();
          it != this->parameters().end(); ++it) {
        entry.reset(parameters_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       3, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  // @@protoc_insertion_point(serialize_to_array_end:AccJob)
  return target;
}

int AccJob::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:AccJob)
  int total_size = 0;

  // optional string AccName = 1;
  if (this->accname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->accname());
  }

  // optional string PerName = 2;
  if (this->pername().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->pername());
  }

  // map<string, uint32> Parameters = 3;
  total_size += 1 * this->parameters_size();
  {
    ::google::protobuf::scoped_ptr<AccJob_ParametersEntry> entry;
    for (::google::protobuf::Map< ::std::string, ::google::protobuf::uint32 >::const_iterator
        it = this->parameters().begin();
        it != this->parameters().end(); ++it) {
      entry.reset(parameters_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AccJob::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AccJob)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const AccJob* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const AccJob>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AccJob)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AccJob)
    MergeFrom(*source);
  }
}

void AccJob::MergeFrom(const AccJob& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AccJob)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  parameters_.MergeFrom(from.parameters_);
  if (from.accname().size() > 0) {

    accname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.accname_);
  }
  if (from.pername().size() > 0) {

    pername_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pername_);
  }
}

void AccJob::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AccJob)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AccJob::CopyFrom(const AccJob& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AccJob)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AccJob::IsInitialized() const {

  return true;
}

void AccJob::Swap(AccJob* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AccJob::InternalSwap(AccJob* other) {
  accname_.Swap(&other->accname_);
  pername_.Swap(&other->pername_);
  parameters_.Swap(&other->parameters_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AccJob::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AccJob_descriptor_;
  metadata.reflection = AccJob_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AccJob

// optional string AccName = 1;
void AccJob::clear_accname() {
  accname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& AccJob::accname() const {
  // @@protoc_insertion_point(field_get:AccJob.AccName)
  return accname_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void AccJob::set_accname(const ::std::string& value) {
  
  accname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:AccJob.AccName)
}
 void AccJob::set_accname(const char* value) {
  
  accname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:AccJob.AccName)
}
 void AccJob::set_accname(const char* value, size_t size) {
  
  accname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:AccJob.AccName)
}
 ::std::string* AccJob::mutable_accname() {
  
  // @@protoc_insertion_point(field_mutable:AccJob.AccName)
  return accname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* AccJob::release_accname() {
  // @@protoc_insertion_point(field_release:AccJob.AccName)
  
  return accname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void AccJob::set_allocated_accname(::std::string* accname) {
  if (accname != NULL) {
    
  } else {
    
  }
  accname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), accname);
  // @@protoc_insertion_point(field_set_allocated:AccJob.AccName)
}

// optional string PerName = 2;
void AccJob::clear_pername() {
  pername_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& AccJob::pername() const {
  // @@protoc_insertion_point(field_get:AccJob.PerName)
  return pername_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void AccJob::set_pername(const ::std::string& value) {
  
  pername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:AccJob.PerName)
}
 void AccJob::set_pername(const char* value) {
  
  pername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:AccJob.PerName)
}
 void AccJob::set_pername(const char* value, size_t size) {
  
  pername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:AccJob.PerName)
}
 ::std::string* AccJob::mutable_pername() {
  
  // @@protoc_insertion_point(field_mutable:AccJob.PerName)
  return pername_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* AccJob::release_pername() {
  // @@protoc_insertion_point(field_release:AccJob.PerName)
  
  return pername_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void AccJob::set_allocated_pername(::std::string* pername) {
  if (pername != NULL) {
    
  } else {
    
  }
  pername_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), pername);
  // @@protoc_insertion_point(field_set_allocated:AccJob.PerName)
}

// map<string, uint32> Parameters = 3;
int AccJob::parameters_size() const {
  return parameters_.size();
}
void AccJob::clear_parameters() {
  parameters_.Clear();
}
 const ::google::protobuf::Map< ::std::string, ::google::protobuf::uint32 >&
AccJob::parameters() const {
  // @@protoc_insertion_point(field_map:AccJob.Parameters)
  return parameters_.GetMap();
}
 ::google::protobuf::Map< ::std::string, ::google::protobuf::uint32 >*
AccJob::mutable_parameters() {
  // @@protoc_insertion_point(field_mutable_map:AccJob.Parameters)
  return parameters_.MutableMap();
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RunReturn::kSuccessFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RunReturn::RunReturn()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:RunReturn)
}

void RunReturn::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

RunReturn::RunReturn(const RunReturn& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:RunReturn)
}

void RunReturn::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  success_ = false;
}

RunReturn::~RunReturn() {
  // @@protoc_insertion_point(destructor:RunReturn)
  SharedDtor();
}

void RunReturn::SharedDtor() {
  if (this != default_instance_) {
  }
}

void RunReturn::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RunReturn::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RunReturn_descriptor_;
}

const RunReturn& RunReturn::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_proto_2ffpga_5frpc_2eproto();
  return *default_instance_;
}

RunReturn* RunReturn::default_instance_ = NULL;

RunReturn* RunReturn::New(::google::protobuf::Arena* arena) const {
  RunReturn* n = new RunReturn;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RunReturn::Clear() {
// @@protoc_insertion_point(message_clear_start:RunReturn)
  success_ = false;
}

bool RunReturn::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:RunReturn)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool success = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &success_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:RunReturn)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:RunReturn)
  return false;
#undef DO_
}

void RunReturn::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:RunReturn)
  // optional bool success = 1;
  if (this->success() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->success(), output);
  }

  // @@protoc_insertion_point(serialize_end:RunReturn)
}

::google::protobuf::uint8* RunReturn::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:RunReturn)
  // optional bool success = 1;
  if (this->success() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->success(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:RunReturn)
  return target;
}

int RunReturn::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:RunReturn)
  int total_size = 0;

  // optional bool success = 1;
  if (this->success() != 0) {
    total_size += 1 + 1;
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RunReturn::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:RunReturn)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const RunReturn* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const RunReturn>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:RunReturn)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:RunReturn)
    MergeFrom(*source);
  }
}

void RunReturn::MergeFrom(const RunReturn& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:RunReturn)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.success() != 0) {
    set_success(from.success());
  }
}

void RunReturn::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:RunReturn)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RunReturn::CopyFrom(const RunReturn& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:RunReturn)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RunReturn::IsInitialized() const {

  return true;
}

void RunReturn::Swap(RunReturn* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RunReturn::InternalSwap(RunReturn* other) {
  std::swap(success_, other->success_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RunReturn::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RunReturn_descriptor_;
  metadata.reflection = RunReturn_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RunReturn

// optional bool success = 1;
void RunReturn::clear_success() {
  success_ = false;
}
 bool RunReturn::success() const {
  // @@protoc_insertion_point(field_get:RunReturn.success)
  return success_;
}
 void RunReturn::set_success(bool value) {
  
  success_ = value;
  // @@protoc_insertion_point(field_set:RunReturn.success)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AllocMessage::AllocMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:AllocMessage)
}

void AllocMessage::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

AllocMessage::AllocMessage(const AllocMessage& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:AllocMessage)
}

void AllocMessage::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

AllocMessage::~AllocMessage() {
  // @@protoc_insertion_point(destructor:AllocMessage)
  SharedDtor();
}

void AllocMessage::SharedDtor() {
  if (this != default_instance_) {
  }
}

void AllocMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AllocMessage::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AllocMessage_descriptor_;
}

const AllocMessage& AllocMessage::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_proto_2ffpga_5frpc_2eproto();
  return *default_instance_;
}

AllocMessage* AllocMessage::default_instance_ = NULL;

AllocMessage* AllocMessage::New(::google::protobuf::Arena* arena) const {
  AllocMessage* n = new AllocMessage;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AllocMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:AllocMessage)
}

bool AllocMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AllocMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
  }
success:
  // @@protoc_insertion_point(parse_success:AllocMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AllocMessage)
  return false;
#undef DO_
}

void AllocMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AllocMessage)
  // @@protoc_insertion_point(serialize_end:AllocMessage)
}

::google::protobuf::uint8* AllocMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:AllocMessage)
  // @@protoc_insertion_point(serialize_to_array_end:AllocMessage)
  return target;
}

int AllocMessage::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:AllocMessage)
  int total_size = 0;

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AllocMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AllocMessage)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const AllocMessage* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const AllocMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AllocMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AllocMessage)
    MergeFrom(*source);
  }
}

void AllocMessage::MergeFrom(const AllocMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AllocMessage)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
}

void AllocMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AllocMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AllocMessage::CopyFrom(const AllocMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AllocMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AllocMessage::IsInitialized() const {

  return true;
}

void AllocMessage::Swap(AllocMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AllocMessage::InternalSwap(AllocMessage* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AllocMessage::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AllocMessage_descriptor_;
  metadata.reflection = AllocMessage_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AllocMessage

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AllocReturn::kBufnoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AllocReturn::AllocReturn()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:AllocReturn)
}

void AllocReturn::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

AllocReturn::AllocReturn(const AllocReturn& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:AllocReturn)
}

void AllocReturn::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  bufno_ = 0;
}

AllocReturn::~AllocReturn() {
  // @@protoc_insertion_point(destructor:AllocReturn)
  SharedDtor();
}

void AllocReturn::SharedDtor() {
  if (this != default_instance_) {
  }
}

void AllocReturn::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AllocReturn::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AllocReturn_descriptor_;
}

const AllocReturn& AllocReturn::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_proto_2ffpga_5frpc_2eproto();
  return *default_instance_;
}

AllocReturn* AllocReturn::default_instance_ = NULL;

AllocReturn* AllocReturn::New(::google::protobuf::Arena* arena) const {
  AllocReturn* n = new AllocReturn;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AllocReturn::Clear() {
// @@protoc_insertion_point(message_clear_start:AllocReturn)
  bufno_ = 0;
}

bool AllocReturn::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AllocReturn)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 bufno = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &bufno_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AllocReturn)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AllocReturn)
  return false;
#undef DO_
}

void AllocReturn::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AllocReturn)
  // optional int32 bufno = 1;
  if (this->bufno() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->bufno(), output);
  }

  // @@protoc_insertion_point(serialize_end:AllocReturn)
}

::google::protobuf::uint8* AllocReturn::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:AllocReturn)
  // optional int32 bufno = 1;
  if (this->bufno() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->bufno(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:AllocReturn)
  return target;
}

int AllocReturn::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:AllocReturn)
  int total_size = 0;

  // optional int32 bufno = 1;
  if (this->bufno() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->bufno());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AllocReturn::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AllocReturn)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const AllocReturn* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const AllocReturn>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AllocReturn)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AllocReturn)
    MergeFrom(*source);
  }
}

void AllocReturn::MergeFrom(const AllocReturn& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AllocReturn)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.bufno() != 0) {
    set_bufno(from.bufno());
  }
}

void AllocReturn::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AllocReturn)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AllocReturn::CopyFrom(const AllocReturn& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AllocReturn)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AllocReturn::IsInitialized() const {

  return true;
}

void AllocReturn::Swap(AllocReturn* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AllocReturn::InternalSwap(AllocReturn* other) {
  std::swap(bufno_, other->bufno_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AllocReturn::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AllocReturn_descriptor_;
  metadata.reflection = AllocReturn_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AllocReturn

// optional int32 bufno = 1;
void AllocReturn::clear_bufno() {
  bufno_ = 0;
}
 ::google::protobuf::int32 AllocReturn::bufno() const {
  // @@protoc_insertion_point(field_get:AllocReturn.bufno)
  return bufno_;
}
 void AllocReturn::set_bufno(::google::protobuf::int32 value) {
  
  bufno_ = value;
  // @@protoc_insertion_point(field_set:AllocReturn.bufno)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FreeMessage::kBufnoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FreeMessage::FreeMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:FreeMessage)
}

void FreeMessage::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

FreeMessage::FreeMessage(const FreeMessage& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:FreeMessage)
}

void FreeMessage::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  bufno_ = 0;
}

FreeMessage::~FreeMessage() {
  // @@protoc_insertion_point(destructor:FreeMessage)
  SharedDtor();
}

void FreeMessage::SharedDtor() {
  if (this != default_instance_) {
  }
}

void FreeMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FreeMessage::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return FreeMessage_descriptor_;
}

const FreeMessage& FreeMessage::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_proto_2ffpga_5frpc_2eproto();
  return *default_instance_;
}

FreeMessage* FreeMessage::default_instance_ = NULL;

FreeMessage* FreeMessage::New(::google::protobuf::Arena* arena) const {
  FreeMessage* n = new FreeMessage;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void FreeMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:FreeMessage)
  bufno_ = 0;
}

bool FreeMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:FreeMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 bufno = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &bufno_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:FreeMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:FreeMessage)
  return false;
#undef DO_
}

void FreeMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:FreeMessage)
  // optional int32 bufno = 1;
  if (this->bufno() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->bufno(), output);
  }

  // @@protoc_insertion_point(serialize_end:FreeMessage)
}

::google::protobuf::uint8* FreeMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:FreeMessage)
  // optional int32 bufno = 1;
  if (this->bufno() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->bufno(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:FreeMessage)
  return target;
}

int FreeMessage::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:FreeMessage)
  int total_size = 0;

  // optional int32 bufno = 1;
  if (this->bufno() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->bufno());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FreeMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:FreeMessage)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const FreeMessage* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const FreeMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:FreeMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:FreeMessage)
    MergeFrom(*source);
  }
}

void FreeMessage::MergeFrom(const FreeMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:FreeMessage)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.bufno() != 0) {
    set_bufno(from.bufno());
  }
}

void FreeMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:FreeMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FreeMessage::CopyFrom(const FreeMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:FreeMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FreeMessage::IsInitialized() const {

  return true;
}

void FreeMessage::Swap(FreeMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FreeMessage::InternalSwap(FreeMessage* other) {
  std::swap(bufno_, other->bufno_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata FreeMessage::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = FreeMessage_descriptor_;
  metadata.reflection = FreeMessage_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// FreeMessage

// optional int32 bufno = 1;
void FreeMessage::clear_bufno() {
  bufno_ = 0;
}
 ::google::protobuf::int32 FreeMessage::bufno() const {
  // @@protoc_insertion_point(field_get:FreeMessage.bufno)
  return bufno_;
}
 void FreeMessage::set_bufno(::google::protobuf::int32 value) {
  
  bufno_ = value;
  // @@protoc_insertion_point(field_set:FreeMessage.bufno)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FreeReturn::FreeReturn()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:FreeReturn)
}

void FreeReturn::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

FreeReturn::FreeReturn(const FreeReturn& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:FreeReturn)
}

void FreeReturn::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

FreeReturn::~FreeReturn() {
  // @@protoc_insertion_point(destructor:FreeReturn)
  SharedDtor();
}

void FreeReturn::SharedDtor() {
  if (this != default_instance_) {
  }
}

void FreeReturn::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FreeReturn::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return FreeReturn_descriptor_;
}

const FreeReturn& FreeReturn::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_proto_2ffpga_5frpc_2eproto();
  return *default_instance_;
}

FreeReturn* FreeReturn::default_instance_ = NULL;

FreeReturn* FreeReturn::New(::google::protobuf::Arena* arena) const {
  FreeReturn* n = new FreeReturn;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void FreeReturn::Clear() {
// @@protoc_insertion_point(message_clear_start:FreeReturn)
}

bool FreeReturn::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:FreeReturn)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
  }
success:
  // @@protoc_insertion_point(parse_success:FreeReturn)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:FreeReturn)
  return false;
#undef DO_
}

void FreeReturn::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:FreeReturn)
  // @@protoc_insertion_point(serialize_end:FreeReturn)
}

::google::protobuf::uint8* FreeReturn::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:FreeReturn)
  // @@protoc_insertion_point(serialize_to_array_end:FreeReturn)
  return target;
}

int FreeReturn::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:FreeReturn)
  int total_size = 0;

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FreeReturn::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:FreeReturn)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const FreeReturn* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const FreeReturn>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:FreeReturn)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:FreeReturn)
    MergeFrom(*source);
  }
}

void FreeReturn::MergeFrom(const FreeReturn& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:FreeReturn)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
}

void FreeReturn::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:FreeReturn)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FreeReturn::CopyFrom(const FreeReturn& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:FreeReturn)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FreeReturn::IsInitialized() const {

  return true;
}

void FreeReturn::Swap(FreeReturn* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FreeReturn::InternalSwap(FreeReturn* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata FreeReturn::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = FreeReturn_descriptor_;
  metadata.reflection = FreeReturn_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// FreeReturn

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
